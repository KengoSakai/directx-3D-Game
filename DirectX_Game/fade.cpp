/******************************************************************
***
***		フェード処理
***
***		fade.cpp
***
***		author: Kengo Sakai
***
*******************************************************************/

/******************************************************************
インクルードファイル
*******************************************************************/
#include "manager.h"
#include "renderer.h"
#include "fade.h"
/******************************************************************
マクロ定義
*******************************************************************/
#define FADE_RATE (5)

/******************************************************************
コンストラクタ
*******************************************************************/
CFade::CFade()
{

}

/******************************************************************
初期化処理関数
*******************************************************************/
void CFade::Initialize(void)
{
	Position = D3DXVECTOR3(0.0f,0.0f,0.0f);
	WidthHeight = D3DXVECTOR3(SCREEN_WIDTH,SCREEN_HEIGHT,0.0f);
	Color = D3DXCOLOR(255,255,255,0);

	FadeState = FADE_NONE;
	CScene2D::Initialize();
}

/******************************************************************
終了処理関数
*******************************************************************/
void CFade::Uninitialize(void)
{
	if (FadeState == FADE_NONE)
	{
		CScene2D::Uninitialize();
	}
}

/******************************************************************
更新処理関数
*******************************************************************/
void CFade::Update(void)
{
	CScene2D::SetColor(Color);

	if(FadeState == FADE_NONE)
	{
		return;
	}

	if(FadeState == FADE_IN)
	{
		//α値を下げていく
		Color.a -= FADE_RATE;

		//フェード終了
		if(Color.a <= 0)
		{
			//α値を0にする
			Color.a = 0;

			//フェードしていない状態へ
			FadeState = FADE_NONE;
			return;
		}
	}

	else if(FadeState == FADE_OUT)
	{
		Color.a += FADE_RATE;

		if(Color.a > 255)
		{
			Color.a = 255;
			FadeState = FADE_MAX;
		}
	}

	else
	{
		FadeState = FADE_IN;
		return;
	}

}

/******************************************************************
描画処理関数
*******************************************************************/
void CFade::Draw(void)
{
	CScene2D::Draw();
}

/******************************************************************
オブジェクト生成処理関数
*******************************************************************/
CFade *CFade::Create(void)
{
	//オブジェトポインタ
	CFade *pFade;

	//インスタンスの生成
	pFade = new CFade;

	//初期化処理
	pFade->Initialize();

	pFade->SetObjType(OBJTYPE_FADE);

	pFade->BindTexture(NULL);

	return pFade;
}
